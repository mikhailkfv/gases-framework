package glenn.gasesframework.common.configuration;

import glenn.gasesframework.api.GasesFrameworkAPI;
import glenn.moddingutils.configuration.Configurations;

import java.io.File;

import net.minecraft.block.Block;
import net.minecraft.item.Item;

public class GasesFrameworkMainConfigurations extends Configurations
{
	
	@ConfigCategory(name = "World generation")
	public WorldGeneration worldGeneration;
	public static class WorldGeneration
	{
		@ConfigCategory(name = "Retrogen")
		public Retrogen retrogen;
		public static class Retrogen
		{
			@ConfigField(name = "Enable", comment = "If true, retrogen will be enabled for only the next Minecraft session. This field will automatically reset to its default value. Consult the information database for more information", defaultValue = "false", autoReset = 1)
			public boolean enabled;
		}
	}
	
	@ConfigCategory(name = "Gases")
	public Gases gases;
	public static class Gases
	{
		@ConfigField(name = "Explosion factor", comment = "The power of gas explosions", defaultValue = "2.5")
		public float explosionFactor;

		@ConfigField(name = "Max height", comment = "The maximal height gas can reach before it disappears", defaultValue = "256")
		public int maxHeight;

		@ConfigCategory(name = "Smoke")
		public Smoke smoke;
		public static class Smoke
		{
			@ConfigField(name = "Fire smoke amount", comment = "The amount of smoke that will be generated by fire from 0 to 16", defaultValue = "8")
			public int fireSmokeAmount;
		}
		
		@ConfigCategory(name = "Ignition")
		public Ignition ignition;
		public static class Ignition
		{
			@ConfigField(name = "Added blocks", comment = "A list of block names for blocks that will be added to the gas ignition block registry", defaultValue = "")
			public String[] addedBlocks;

			@ConfigField(name = "Removed blocks", comment = "A list of block names for blocks that will be removed from the gas ignition block registry", defaultValue = "")
			public String[] removedBlocks;

			@ConfigField(name = "Added items", comment = "A list of item names for items that will be added to the gas ignition item registry", defaultValue = "")
			public String[] addedItems;

			@ConfigField(name = "Removed items", comment = "A list of item names for items that will be removed from the gas ignition item registry", defaultValue = "")
			public String[] removedItems;
		}
	}
	
	@ConfigCategory(name = "Blocks")
	public Blocks blocks;
	public static class Blocks
	{
		@ConfigCategory(name = "Gas Furnace")
		public GasFurnace gasFurnace;
		public static class GasFurnace
		{
			@ConfigField(name = "Heating speed", comment = "The speed at which gas furnaces heat up and cool down", defaultValue = "2")
			public int heatingSpeed;
		}

		@ConfigCategory(name = "Gas Tank")
		public GasTank gasTank;
		public static class GasTank
		{
			@ConfigField(name = "Fancy tanks", comment = "Whether or not gas tanks will be rendered with fancy fluid physics", defaultValue = "true")
			public boolean fancyTank;
		}
		
		@ConfigCategory(name = "Gas Dynamo")
		public GasDynamo gasDynamo;
		public static class GasDynamo
		{
			@ConfigField(name = "Max fuel", comment = "The maximal amount of fuel contained by a gas dynamo", defaultValue = "1000")
			public int maxFuel;
			
			@ConfigField(name = "Fuel per tick", comment = "The maximal amount of fuel consumed per tick by a gas dynamo", defaultValue = "4")
			public int fuelPerTick;
			
			@ConfigField(name = "RF per fuel", comment = "The RF (Redstone Flux) generated per unit of fuel", defaultValue = "16")
			public int energyPerFuel;
			
			@ConfigField(name = "Max RF", comment = "The maximal amount of RF (Redstone Flux) contained by a gas dynamo", defaultValue = "60000")
			public int maxEnergy;
			
			@ConfigField(name = "Max RF transfer", comment = "The maximal amount of RF (Redstone Flux) that can be evently transmitted from a gas dynamo each tick", defaultValue = "80")
			public int maxEnergyTransfer;
		}
	}
	
	@ConfigCategory(name = "Piping")
	public Piping piping;
	public static class Piping
	{
		public static class Material
		{
			@ConfigField(name = "Max pressure", comment = "The maximal amount of pressure piping blocks of the iron tier can produce")
			@AbstractConfig
			public int maxPressure;

			@ConfigField(name = "Pipe pressure tolerance", comment = "The amount of pressure pipes can take before breaking")
			@AbstractConfig
			public int pressureTolerance;
		}
		
		@ConfigCategory(name = "Iron Material")
		public IronMaterial ironMaterial;
		public static class IronMaterial extends Material
		{
			@ConfigField(defaultValue = "31")
			@DelegateConfig(delegateFor = "maxPressure")
			private int _maxPressure;

			@ConfigField(defaultValue = "31")
			@DelegateConfig(delegateFor = "pressureTolerance")
			private int _pressureTolerance;
		}

		@ConfigCategory(name = "Glass Material")
		public GlassMaterial glassMaterial;
		public static class GlassMaterial extends Material
		{
			@ConfigField(defaultValue = "31")
			@DelegateConfig(delegateFor = "maxPressure")
			private int _maxPressure;
		}

		@ConfigCategory(name = "Wood Material")
		public WoodMaterial woodMaterial;
		public static class WoodMaterial extends Material
		{
			@ConfigField(defaultValue = "7")
			@DelegateConfig(delegateFor = "maxPressure")
			private int _maxPressure;

			@ConfigField(defaultValue = "7")
			@DelegateConfig(delegateFor = "pressureTolerance")
			private int _pressureTolerance;
		}
	}
	
	@ConfigCategory(name = "Update checker")
	public UpdateChecker updateChecker;
	public static class UpdateChecker
	{
		@ConfigField(name = "Enable", comment = "Allow Gases Framework to automatically check for updates", defaultValue = "true")
		public boolean enable;
	}
	
	public GasesFrameworkMainConfigurations(File configurationsFile)
	{
		super(configurationsFile);
	}
}