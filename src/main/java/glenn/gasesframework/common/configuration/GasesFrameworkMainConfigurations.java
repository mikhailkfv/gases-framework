package glenn.gasesframework.common.configuration;

import glenn.moddingutils.configuration.Configurations;

import java.io.File;

public class GasesFrameworkMainConfigurations extends Configurations
{

	@ConfigCategory(name = "World generation")
	public WorldGeneration worldGeneration;

	public static class WorldGeneration
	{
		@ConfigCategory(name = "Retrogen")
		public Retrogen retrogen;

		public static class Retrogen
		{
			@ConfigField(name = "Enable", comment = "If true, retrogen will be enabled for only the next Minecraft session. This field will automatically reset to its default value. Consult the information database for more information", defaultValue = "false", autoReset = 1)
			public boolean enabled;
		}
	}

	@ConfigCategory(name = "Gases")
	public Gases gases;

	public static class Gases
	{
		@ConfigField(name = "Explosion factor", comment = "The power of gas explosions", defaultValue = "2.5")
		public float explosionFactor;

		@ConfigField(name = "Max height", comment = "The maximal height gas can reach before it disappears", defaultValue = "256")
		public int maxHeight;

		@ConfigCategory(name = "Smoke")
		public Smoke smoke;

		public static class Smoke
		{
			@ConfigField(name = "Fire smoke amount", comment = "The amount of smoke that will be generated by fire from 0 to 16", defaultValue = "8")
			public int fireSmokeAmount;
		}

		@ConfigCategory(name = "Ignition")
		public Ignition ignition;

		public static class Ignition
		{
			@ConfigField(name = "Added blocks", comment = "A list of block names for blocks that will be added to the gas ignition block registry", defaultValue = "")
			public String[] addedBlocks;

			@ConfigField(name = "Removed blocks", comment = "A list of block names for blocks that will be removed from the gas ignition block registry", defaultValue = "")
			public String[] removedBlocks;

			@ConfigField(name = "Added items", comment = "A list of item names for items that will be added to the gas ignition item registry", defaultValue = "")
			public String[] addedItems;

			@ConfigField(name = "Removed items", comment = "A list of item names for items that will be removed from the gas ignition item registry", defaultValue = "")
			public String[] removedItems;
		}
	}

	@ConfigCategory(name = "Blocks")
	public Blocks blocks;

	public static class Blocks
	{
		@ConfigCategory(name = "Gas Tanks")
		public GasTanks gasTanks;

		public static class GasTanks
		{
			@ConfigField(name = "Fancy tanks", comment = "Whether or not gas tanks will be rendered with fancy fluid physics", defaultValue = "true")
			public boolean fancyTank;
		}

		public static class GasFurnace
		{
			@ConfigField(name = "Smoke emission interval", comment = "The interval at which smoke is emitted from a gas furnace")
			@AbstractConfig
			public int smokeEmissionInterval;

			@ConfigField(name = "Max fuel", comment = "The maximal amount of fuel contained by a gas furnace")
			@AbstractConfig
			public int maxFuel;

			@ConfigField(name = "Temperature per fuel", comment = "The speed at which a gas furnaces heats up and cools down")
			@AbstractConfig
			public int temperaturePerFuel;

			@ConfigField(name = "Temperature falloff", comment = "The speed at which a gas furnace cools down")
			@AbstractConfig
			public int temperatureFalloff;
		}

		@ConfigCategory(name = "Iron Gas Furnace")
		public IronGasFurnace ironGasFurnace;

		public static class IronGasFurnace extends GasFurnace
		{
			@ConfigField(defaultValue = "100")
			@DelegateConfig(delegateFor = "smokeEmissionInterval")
			private int _smokeEmissionInterval;

			@ConfigField(defaultValue = "1000")
			@DelegateConfig(delegateFor = "maxFuel")
			private int _maxFuel;

			@ConfigField(defaultValue = "4")
			@DelegateConfig(delegateFor = "temperaturePerFuel")
			private int _heatingSpeed;

			@ConfigField(defaultValue = "2")
			@DelegateConfig(delegateFor = "temperatureFalloff")
			private int _temperatureFalloff;
		}

		@ConfigCategory(name = "Wood Gas Furnace")
		public WoodGasFurnace woodGasFurnace;

		public static class WoodGasFurnace extends GasFurnace
		{
			@ConfigField(name = "Catches Fire", comment = "Combustion in a wooden housing is a great idea.", defaultValue = "true")
			public boolean catchesFire;

			@ConfigField(defaultValue = "75")
			@DelegateConfig(delegateFor = "smokeEmissionInterval")
			private int _smokeEmissionInterval;

			@ConfigField(defaultValue = "1000")
			@DelegateConfig(delegateFor = "maxFuel")
			private int _maxFuel;

			@ConfigField(defaultValue = "4")
			@DelegateConfig(delegateFor = "temperaturePerFuel")
			private int _heatingSpeed;

			@ConfigField(defaultValue = "3")
			@DelegateConfig(delegateFor = "temperatureFalloff")
			private int _temperatureFalloff;
		}

		public static class GasDynamo
		{
			@ConfigField(name = "Max fuel", comment = "The maximal amount of fuel contained by a gas dynamo")
			@AbstractConfig
			public int maxFuel;

			@ConfigField(name = "Fuel per tick", comment = "The maximal amount of fuel consumed per tick by a gas dynamo")
			@AbstractConfig
			public int fuelPerTick;

			@ConfigField(name = "RF per fuel", comment = "The RF (Redstone Flux) generated per unit of fuel")
			@AbstractConfig
			public int energyPerFuel;

			@ConfigField(name = "Max RF", comment = "The maximal amount of RF (Redstone Flux) contained by a gas dynamo")
			@AbstractConfig
			public int maxEnergy;

			@ConfigField(name = "Max RF transfer", comment = "The maximal amount of RF (Redstone Flux) that can be evently transmitted from a gas dynamo each tick")
			@AbstractConfig
			public int maxEnergyTransfer;
		}

		@ConfigCategory(name = "Iron Gas Dynamo")
		public IronGasDynamo ironGasDynamo;

		public static class IronGasDynamo extends GasDynamo
		{
			@ConfigField(defaultValue = "1000")
			@DelegateConfig(delegateFor = "maxFuel")
			private int _maxFuel;

			@ConfigField(defaultValue = "4")
			@DelegateConfig(delegateFor = "fuelPerTick")
			private int _fuelPerTick;

			@ConfigField(defaultValue = "16")
			@DelegateConfig(delegateFor = "energyPerFuel")
			private int _energyPerFuel;

			@ConfigField(defaultValue = "60000")
			@DelegateConfig(delegateFor = "maxEnergy")
			private int _maxEnergy;

			@ConfigField(defaultValue = "80")
			@DelegateConfig(delegateFor = "maxEnergyTransfer")
			private int _maxEnergyTransfer;
		}

		@ConfigCategory(name = "Wooden Gas Dynamo")
		public WoodGasDynamo woodGasDynamo;

		public static class WoodGasDynamo extends GasDynamo
		{
			@ConfigField(name = "Catches Fire", comment = "Combustion in a wooden housing is a great idea.", defaultValue = "true")
			public boolean catchesFire;

			@ConfigField(defaultValue = "1000")
			@DelegateConfig(delegateFor = "maxFuel")
			private int _maxFuel;

			@ConfigField(defaultValue = "4")
			@DelegateConfig(delegateFor = "fuelPerTick")
			private int _fuelPerTick;

			@ConfigField(defaultValue = "8")
			@DelegateConfig(delegateFor = "energyPerFuel")
			private int _energyPerFuel;

			@ConfigField(defaultValue = "30000")
			@DelegateConfig(delegateFor = "maxEnergy")
			private int _maxEnergy;

			@ConfigField(defaultValue = "40")
			@DelegateConfig(delegateFor = "maxEnergyTransfer")
			private int _maxEnergyTransfer;
		}

		public static class GasTank
		{
			@ConfigField(name = "Storage multiplier", comment = "Multiplier for the amount of gas the block can store")
			@AbstractConfig
			public int storageMultiplier;
		}

		@ConfigCategory(name = "Wood Gas Tank")
		public WoodGasTank woodGasTank;

		public static class WoodGasTank extends GasTank
		{
			@ConfigField(defaultValue = "1")
			@DelegateConfig(delegateFor = "storageMultiplier")
			private int _storageMultiplier;

			@ConfigField(name = "Leaky", comment = "If true, the gas tank will leak when overfilled", defaultValue = "true")
			public boolean leaky;
		}

		@ConfigCategory(name = "Iron Gas Tank")
		public IronGasTank ironGasTank;

		public static class IronGasTank extends GasTank
		{
			@ConfigField(defaultValue = "2")
			@DelegateConfig(delegateFor = "storageMultiplier")
			private int _storageMultiplier;
		}
	}

	@ConfigCategory(name = "Piping")
	public Piping piping;

	public static class Piping
	{
		public static class Material
		{
			@ConfigField(name = "Max pressure", comment = "The maximal amount of pressure piping blocks of the iron tier can produce")
			@AbstractConfig
			public int maxPressure;

			@ConfigField(name = "Pipe pressure tolerance", comment = "The amount of pressure pipes can take before breaking")
			@AbstractConfig
			public int pressureTolerance;

			@ConfigField(name = "Pump rate", comment = "The tick rate at which pumps and collectors will pump")
			@AbstractConfig
			public int pumpRate;

			@ConfigField(name = "Collection range", comment = "The radius of block the range gas collectors can search for gases")
			@AbstractConfig
			public int collectionRange;
		}

		@ConfigCategory(name = "Iron Material")
		public IronMaterial ironMaterial;

		public static class IronMaterial extends Material
		{
			@ConfigField(defaultValue = "31")
			@DelegateConfig(delegateFor = "maxPressure")
			private int _maxPressure;

			@ConfigField(defaultValue = "31")
			@DelegateConfig(delegateFor = "pressureTolerance")
			private int _pressureTolerance;

			@ConfigField(defaultValue = "20")
			@DelegateConfig(delegateFor = "pumpRate")
			private int _pumpRate;

			@ConfigField(defaultValue = "4")
			@DelegateConfig(delegateFor = "collectionRange")
			private int _collectionRange;
		}

		@ConfigCategory(name = "Glass Material")
		public GlassMaterial glassMaterial;

		public static class GlassMaterial extends Material
		{
			@ConfigField(defaultValue = "31")
			@DelegateConfig(delegateFor = "pressureTolerance")
			private int _pressureTolerance;
		}

		@ConfigCategory(name = "Wood Material")
		public WoodMaterial woodMaterial;

		public static class WoodMaterial extends Material
		{
			@ConfigField(defaultValue = "7")
			@DelegateConfig(delegateFor = "maxPressure")
			private int _maxPressure;

			@ConfigField(defaultValue = "7")
			@DelegateConfig(delegateFor = "pressureTolerance")
			private int _pressureTolerance;

			@ConfigField(defaultValue = "30")
			@DelegateConfig(delegateFor = "pumpRate")
			private int _pumpRate;

			@ConfigField(defaultValue = "2")
			@DelegateConfig(delegateFor = "collectionRange")
			private int _collectionRange;
		}

		@ConfigCategory(name = "Infinite Material")
		public InfiniteMaterial infiniteMaterial;

		public static class InfiniteMaterial extends Material
		{
			@ConfigField(defaultValue = "20")
			@DelegateConfig(delegateFor = "pumpRate")
			private int _pumpRate;
		}
	}

	@ConfigCategory(name = "Update checker")
	public UpdateChecker updateChecker;

	public static class UpdateChecker
	{
		@ConfigField(name = "Enable", comment = "Allow Gases Framework to automatically check for updates", defaultValue = "true")
		public boolean enable;
	}

	public GasesFrameworkMainConfigurations(File configurationsFile)
	{
		super(configurationsFile);
	}
}